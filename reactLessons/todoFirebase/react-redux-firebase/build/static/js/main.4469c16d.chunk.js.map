{"version":3,"sources":["config/prod.js","reducers/index.js","reducers/dataReducer.js","actions/types.js","reducers/authReducer.js","config/firebase.js","actions/index.js","components/ToDoListItem.js","components/ToDoList.js","components/SignIn.js","components/auth/requireAuth.js","App.js","serviceWorker.js","index.js","config/keys.js"],"names":["console","log","combineReducers","data","state","arguments","length","undefined","action","type","payload","auth","firebase","FirebaseConfig","todosRef","ref","child","authRef","provider","GoogleAuthProvider","addToDo","newToDo","uid","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","push","set","stop","this","_x","apply","completeToDo","completeToDoId","_ref2","_callee2","_context2","remove","_x2","fetchToDos","_ref3","_callee3","_context3","abrupt","on","snapshot","val","_x3","fetchUser","onAuthStateChanged","user","signIn","signInWithPopup","then","result","catch","error","signOut","ToDoListItem","handleCompleteClick","_this$props","_this","props","_this2","_this$props2","todoId","todo","react_default","createElement","key","className","title","onClick","Component","connect","ToDoList","addFormVisible","addFormValue","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","renderAddForm","_this$state","lib","s","onSubmit","onChange","id","placeholder","toDos","_","map","components_ToDoListItem","isEmpty","renderToDos","floating","large","teal","darken-4","actions","Signin","nextProps","context","router","history","alt","src","href","contextTypes","PropTypes","object","requireAuth","ComposedComponent","Authentication","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","authenticated","App","BrowserRouter","Route","exact","path","component","SignIn","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","require"],"mappings":"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","file":"static/js/main.4469c16d.chunk.js","sourcesContent":["console.log(\"PROD!!!\");\n","import { combineReducers } from \"redux\";\n\nimport data from \"./dataReducer\";\nimport auth from \"./authReducer\";\n\nexport default combineReducers({\n  data,\n  auth\n});","import { FETCH_TODOS } from \"../actions/types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_TODOS:\n      return action.payload;\n    default:\n      return state;\n  }\n};","export const FETCH_TODOS = \"FETCH_TODOS\";\nexport const FETCH_USER = \"FETCH_USER\";","import { FETCH_USER } from \"../actions/types\";\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || null;\n    default:\n      return state;\n  }\n};","import * as firebase from \"firebase\";\n\nimport { FirebaseConfig } from \"../config/keys\";\nfirebase.initializeApp(FirebaseConfig);\n\nconst databaseRef = firebase.database().ref();\nexport const todosRef = databaseRef.child(\"todos\");\nexport const authRef = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();","import { todosRef, authRef, provider } from \"../config/firebase\";\nimport { FETCH_TODOS, FETCH_USER } from \"./types\";\n\nexport const addToDo = (newToDo, uid) => async dispatch => {\n  todosRef\n    .child(uid)\n    .push()\n    .set(newToDo);\n};\n\nexport const completeToDo = (completeToDoId, uid) => async dispatch => {\n  todosRef\n    .child(uid)\n    .child(completeToDoId)\n    .remove();\n};\n\nexport const fetchToDos = uid => async dispatch => {\n    if (uid===undefined) {\n        return;\n    }\n  todosRef.child(uid).on(\"value\", snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};\n\n\nexport const fetchUser = () => dispatch => {\n  authRef.onAuthStateChanged(user => {\n    if (user) {\n      dispatch({\n        type: FETCH_USER,\n        payload: user\n      });\n    } else {\n      dispatch({\n        type: FETCH_USER,\n        payload: null\n      });\n    }\n  });\n};\n\nexport const signIn = () => dispatch => {\n  authRef\n    .signInWithPopup(provider)\n    .then(result => {\n        console.log(result);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const signOut = () => dispatch => {\n  authRef\n    .signOut()\n    .then(() => {\n      // Sign-out successful.\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { completeToDo } from \"../actions\";\n\nclass ToDoListItem extends Component {\n    handleCompleteClick = completeToDoId => {\n        const { completeToDo, auth } = this.props;\n        completeToDo(completeToDoId, auth.uid);\n      };\n\n  render() {\n    const { todoId, todo } = this.props;\n    return (\n      <div key=\"toDoName\" className=\"col s10 offset-s1 to-do-list-item teal\">\n        <h4>\n          {todo.title}{\" \"}\n          <span\n            onClick={() => this.handleCompleteClick(todoId)}\n            className=\"complete-todo-item waves-effect waves-light teal lighten-5 teal-text text-darken-4 btn\"\n          >\n            <i className=\"large material-icons\">done</i>\n          </span>\n        </h4>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n    return {\n      auth\n    };\n  };\n\nexport default connect(mapStateToProps, { completeToDo })(ToDoListItem);","import \"./ToDoList.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport * as actions from \"../actions\";\nimport ToDoListItem from \"./ToDoListItem\";\nimport {Col, Row, Icon, Button} from \"react-materialize\"\n\nclass ToDoList extends Component {\n  state = {\n    addFormVisible: false,\n    addFormValue: \"\"\n  };\n\n  handleInputChange = event => {\n    this.setState({ addFormValue: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    const { addFormValue } = this.state;\n    const { addToDo, auth } = this.props;\n    event.preventDefault();\n    addToDo({ title: addFormValue }, auth.uid);\n    this.setState({ addFormValue: \"\" });\n  };\n\n  renderAddForm = () => {\n    const { addFormVisible, addFormValue } = this.state;\n    if (addFormVisible) {\n      return (\n        // <Row className=\"to-do-list-item\">\n        <Col s={10} className=\"offset-s1\">\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"to-do-list-item input-field\">\n                {<Icon className=\"prefix\">note_add</Icon>}\n              <input\n                value={addFormValue}\n                onChange={this.handleInputChange}\n                id=\"toDoNext\"\n                type=\"text\"\n                placeholder=\"What To Do Next\"\n              />\n            </div>\n          </form>\n        </Col>\n        // </Row>\n      );\n    }\n  };\n\n  renderToDos() {\n    const { data } = this.props;\n    const toDos = _.map(data, (value, key) => {\n      return <ToDoListItem key={key} todoId={key} todo={value} />;\n    });\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    }\n    return (\n      <div className=\"col s10 offset-s1 center-align\">\n        {<Icon>adb</Icon>}\n        <h4>You have completed all the tasks</h4>\n        <p>Start by clicking add button in the bottom of the screen</p>\n      </div>\n    );\n  }\n\n  componentWillMount() {\n    const { auth } = this.props;\n    this.props.fetchToDos(auth.uid);\n  }\n\n  render() {\n    const { addFormVisible } = this.state;\n    return (\n      <div className=\"to-do-list-container\">\n        <Row>\n          {this.renderAddForm()}\n          {this.renderToDos()}\n        </Row>\n        <div className=\"fixed-action-btn\">\n        <Button\n            onClick={this.props.signOut}\n            id=\"sign-out-button\"\n            className=\"btn-floating btn-large teal darken-4\"\n          ></Button>\n          <Button floating large=\"true\" teal=\"true\" darken-4=\"true\"\n            onClick={() => this.setState({ addFormVisible: !addFormVisible })}\n          >\n            {addFormVisible ? (\n                <Icon large>close</Icon>\n            ) : (\n                <Icon large>add</Icon>\n            )}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ data, auth }) => {\n    return {\n      data,\n      auth\n    };\n  };\n  \n\nexport default connect(mapStateToProps, actions)(ToDoList);","import \"./SignIn.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../actions\";\nimport PropTypes from \"prop-types\";\n\nclass Signin extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.auth) {\n      this.context.router.history.push(\"/app\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row social-signin-container\">\n        <div className=\"col s10 offset-s1 center-align\">\n          <img alt=\"Sign in\" id=\"sign-in\" src=\"/img/user.png\" />\n          <h4 id=\"sign-in-header\">Sign In to start</h4>\n          <a href=\"#\" className=\"social-signin\" onClick={this.props.signIn}>\n            <i className=\"fa fa-google social-signin-icon\" />\n            Sign In With Google\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, { signIn })(Signin);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nexport default function(ComposedComponent) {\n  class Authentication extends Component {\n    static contextTypes = {\n      router: PropTypes.object\n    };\n\n    componentWillMount() {\n      if (this.props.authenticated === null) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        this.context.router.history.push(\"/\");\n      }\n    }\n\n    render() {\n      if (this.props.authenticated) {\n        return <ComposedComponent {...this.props} />;\n      }\n      return null;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticated: state.auth };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}","import React, { Component } from \"react\";\nimport ToDoList from \"./components/ToDoList\";\nimport SignIn from \"./components/SignIn\";\nimport requireAuth from \"./components/auth/requireAuth\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"./actions\";\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Route exact path=\"/\" component={SignIn} />\n          <Route path=\"/app\" component={requireAuth(ToDoList)} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, { fetchUser })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"materialize-css/dist/css/materialize.min.css\";\n// import \"materialize-css/dist/js/materialize.min.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();\n","if (process.env.NODE_ENV === \"production\") {\n    module.exports = require(\"./prod\");\n  } else {\n    module.exports = require(\"./dev\");\n  }"],"sourceRoot":""}